name: Acceptance Tests

on:
  workflow_call:
    inputs:
      image:
        required: false
        type: string
        default: ghcr.io/${{ github.repository }}:latest

# For usual triggers:
#on:
#  pull_request:
#    branches: [main]

jobs:
  test-action:
    name: Example Action
    runs-on: ubuntu-latest
    services:
      # The default database service name (hostname) for wordpress-ci is "mysql"
      # You can change it by setting the "db-host" input to the action.
      mysql:
        image: mariadb:12
        env:
          MARIADB_RANDOM_ROOT_PASSWORD: 'yes'
          # These are the database credentials used by wordpress-ci
          MARIADB_DATABASE: wordpress
          MARIADB_USER: username
          MARIADB_PASSWORD: password
        ports:
          - 3306:3306
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Chrome for webdriver-based testing
        uses: browser-actions/setup-chrome@v2

      - name: Setup Chrome Driver for webdriver-based testing
        uses: nanasess/setup-chromedriver@v2

      - name: Ensure the Test Output folder exists
        run: mkdir -p example/tests/_output

      - name: Start Chrome Driver process in background
        run: chromedriver --port=4444 >example/tests/_output/chromedriver.log 2>&1 &

      # Make a copy of the plugin to be mapped into wordpress-ci container
      # Leave the original plugin folder intact for other steps
      - name: Make a copy of the example plugin for test
        run: |
          mkdir ./temp
          cp -Rpdf ./example ./temp/example

      - name: Test My Plugin
        uses: ./
        with:
          image: ${{ inputs.image }}
          plugins: ./example/myplugin
          db-host: mysql
          test-command: |
            # Running "server-side" commands in the Wordpress CI container
            wpci-cmd wp rewrite structure '/%postname%/'
            wpci-cmd wp plugin activate myplugin

            # Running "client-side" commands in GitHub Actions runner
            # Test may get the URL of the site from environment variable: $WORDPRESS_CI_URL
            composer install
            composer run test
          test-command-context: ./example/myplugin

      - name: Test My Theme
        uses: ./
        with:
          image: ${{ inputs.image }}
          themes: ./example/mytheme
          test-command: |
            # Running "server-side" commands in the Wordpress CI container
            wpci-cmd wp rewrite structure '/%postname%/'
            wpci-cmd wp theme activate mytheme

            # Running "client-side" commands in GitHub Actions runner
            # Test may get the URL of the site from environment variable: $WORDPRESS_CI_URL
            composer install
            composer run test
          test-command-context: ./example/mytheme

      - name: Combined Test
        uses: ./
        with:
          image: ${{ inputs.image }}
          plugins: ./example/myplugin
          themes: ./example/mytheme
          test-command: |
            # Running "server-side" commands in the Wordpress CI container
            wpci-cmd wp rewrite structure '/%postname%/'
            wpci-cmd wp plugin activate myplugin
            wpci-cmd wp theme activate mytheme

            # Running "client-side" commands in GitHub Actions runner
            # Test may get the URL of the site from environment variable: $WORDPRESS_CI_URL
            composer install
            composer run test
          test-command-context: ./example/combined_test

      - name: Import Test
        uses: ./
        with:
          image: ${{ inputs.image }}
          import-sql: ./example/import_test/dummy.sql
          test-command: |
            # Running "server-side" commands in the Wordpress CI container
            COUNT=$(wpci-cmd wp db query --skip-column-names "SELECT COUNT(*) FROM wp_dummy" | tr -d ' \n')

            if [ "$COUNT" == "3" ]; then
              echo "Import test passed, found 3 rows in wp_dummy table"
            else
              echo "Expected 3 rows in wp_dummy table, found $COUNT"
              exit 1
            fi
          test-command-context: ./example/import_test

      - name: Test Rewrite and .htaccess support
        uses: ./
        with:
          image: ${{ inputs.image }}
          plugins: ./example/myplugin
          test-command-context: ./example/rewrite_test
          test-command: |
            # Running "server-side" commands in the Wordpress CI container
            wpci-cmd wp rewrite structure '/%postname%/'
            wpci-cmd wp plugin activate myplugin
            wpci-cmd wp rewrite flush --hard

            # debug
            wpci-cmd ls -la /var/www/html

            # Check if .htaccess exists in document root
            if wpci-cmd test -f /var/www/html/.htaccess; then
              echo ".htaccess file exists."
            else
              echo ".htaccess file is missing."
              exit 1
            fi

            # Running "client-side" commands in GitHub Actions runner
            php ./test.php

      - name: Store Acceptance Test Output if test failed
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: acceptance-test-output
          path: example/tests/_output/
